#include <stdio.h>
#include <stdlib.h>

typedef struct Node {
    int data;
    struct Node* left;
    struct Node* right;
} Node;
Node* createNode(int data) {
    Node* newNode = (Node*)malloc(sizeof(Node));
    newNode->data = data;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}
int calculateHeightAndDiameter(Node* node, int* diameter) {
    if (node == NULL) {
        return 0;
    }


    int leftHeight = calculateHeightAndDiameter(node->left, diameter);
    int rightHeight = calculateHeightAndDiameter(node->right, diameter);


    int currentDiameter = leftHeight + rightHeight + 1;
    if (currentDiameter > *diameter) {
        *diameter = currentDiameter;
    }


    return (leftHeight > rightHeight ? leftHeight : rightHeight) + 1;
}


int getDiameter(Node* root) {
    int diameter = 0;
    calculateHeightAndDiameter(root, &diameter);
    return diameter - 1; 
}
int main() {
    Node* root = createNode(1);
    root->left = createNode(2);
    root->right = createNode(3);
    root->left->left = createNode(4);
    root->left->right = createNode(5);
    root->right->left = createNode(6);
    root->right->right = createNode(7);

    int diameter = getDiameter(root);
    printf("Diameter of the binary tree: %d\n", diameter);

    return 0;
}
